{"version":3,"sources":["logo.svg","posts/components.js","lookup/components.js","App.js","reportWebVitals.js","index.js"],"names":["PostsComponent","props","textAreaRef","React","createRef","useState","newPosts","setNewPosts","className","onSubmit","event","preventDefault","newValue","current","value","tempNewPosts","unshift","content","likes","id","name","required","ref","type","PostList","postsInit","setPostsInit","posts","setPosts","useEffect","final","concat","length","callback","xhr","XMLHttpRequest","responseType","open","onload","response","status","onerror","error","console","log","send","loadPosts","finalPostsInit","alert","map","item","index","Post","post","ActionBtn","action","setLikes","userLike","setUserLike","displayAction","display","onClick","App","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appElement","document","getElementById","ReactDOM","render","postsElement"],"mappings":"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","file":"static/js/main.22763169.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useEffect, useState } from 'react'\nimport { loadPosts } from '../lookup'\n\nexport function PostsComponent(props) {\n    const textAreaRef = React.createRef()\n    const [newPosts, setNewPosts] = useState([])\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const newValue = textAreaRef.current.value\n        let tempNewPosts = [...newPosts]\n        tempNewPosts.unshift({\n            content: newValue,\n            likes: 0,\n            id: 12313\n        })\n        setNewPosts(tempNewPosts)\n        textAreaRef.current.value = ''\n    }\n    return <div className={props.className}>\n        <div className='col-12 mb-3'>\n            <form onSubmit={handleSubmit}>\n                <textarea className='form-control' name='post' required={true} ref={textAreaRef}></textarea>\n                <button type='submit' className='btn btn-primary my-3'>Post</button>\n            </form>\n        </div>\n        <PostList newPosts={newPosts} />\n    </div>\n}\n\nexport function PostList(props) {\n    const [postsInit, setPostsInit] = useState([])\n    const [posts, setPosts] = useState([])\n    useEffect(() => {\n        const final = [...props.newPosts.concat(postsInit)]\n        if (final.length !== posts.length) {\n            setPosts(final)\n        }\n    }, [props.newPosts, posts, postsInit])\n    useEffect(() => {\n        const myCallback = (response, status) => {\n            if (status === 200) {\n                const finalPostsInit = [...response].concat(postsInit)\n                setPostsInit(finalPostsInit)\n            } else {\n                alert('There was an error')\n            }\n        }\n        loadPosts(myCallback)\n    }, [postsInit])\n    return posts.map((item, index) => {\n        return <Post post={item} className='my-5 py-5 border bg-white text-dark' key={`${index}-{item.id}`} />\n    })\n}\n\n\nexport function ActionBtn(props) {\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\n    const { post, action } = props\n    const [likes, setLikes] = useState(post.likes ? post.likes : 0)\n    const [userLike, setUserLike] = useState(post.userLike === true ? true : false)\n    const displayAction = action.display ? action.display : 'Action'\n    const display = action.type === 'like' ? `${likes} ${displayAction}` : displayAction\n    const handleClick = (event) => {\n        event.preventDefault()\n        if (action.type === 'like') {\n            if (userLike === true) {\n                setLikes(likes - 1)\n                setUserLike(false)\n            } else {\n                setLikes(post.likes + 1)\n                setUserLike(true)\n            }\n        }\n    }\n    return <button className={className} onClick={handleClick}>{display}</button>\n}\n\nexport function Post(props) {\n    const { post } = props\n    const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n    return <div className={className}>\n        <p>{post.id}- {post.content}</p>\n        <div className='btn btn-group'>\n            <ActionBtn post={post} action={{ type: 'like', display: 'Like' }} />\n            <ActionBtn post={post} action={{ type: 'unlike', display: 'Unlike' }} />\n        </div>\n    </div>\n}","\nexport function loadPosts(callback) {\n    const xhr = new XMLHttpRequest()\n    const method = 'GET'\n    const url = 'http://localhost:8000/api/posts/'\n    const responseType = 'json'\n    xhr.responseType = responseType\n    xhr.open(method, url)\n    xhr.onload = function () {\n      callback(xhr.response, xhr.status)\n    }\n    xhr.onerror = function(error){\n      callback({'message': 'The request was an error', 'status': 400})\n      console.log(error);\n    }\n    xhr.send()\n  }\n  ","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {PostsComponent} from './posts'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <PostsComponent/>\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {PostsComponent} from './posts'\n\nconst appElement = document.getElementById('root')\nif(appElement){\n  ReactDOM.render(\n      <App />,\n      appElement\n  ); \n}\nconst postsElement = document.getElementById('diaries')\nif(postsElement){\n  ReactDOM.render(\n      <PostsComponent />,\n      postsElement\n  ); \n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}